. /etc/nwatch.conf

function watchDog(){
        echo "Process \"$2\" started as PID $1" 
        PID=$1
        while true
        do
                lsof -p $PID +r 1 &>/dev/null
                echo "[ERR]: Process with PID $PID stopped. Attempting to restart with command \"$2\" in 3 seconds." >> $logDir
                $2 &
                PID2=$!
                echo "New PID is $PID."  >> $logDir
                sed -i -e 's/$PID/$PID2/g' /tmp/nwatch.process
                PID=$PID2
                sleep 3m;

        done
}




function killNwatch(){
        if [ ! -f /tmp/nwatch ]; then
                echo "Nwatch not running. Will attempt to reset mon interfaces anyway"
        else
                kill $(cat /tmp/nwatch | tr "\n" " ")
                pkill ffmpeg
        fi

        rm /tmp/nwatch
        rm /tmp/nwatch.process
        IFS=$'\n'
        allMon=($(ifconfig | grep mon| awk '{print $1}'))
        for (( i=0; i<${#allMon[@]}; i++ ))
        do
                sudo airmon-ng stop "${allMon[i]::-1}"
        done
        ifconfig $networkInterface up
}

function startNwatch(){
if [[ -f /tmp/nwatch.process ]]; 
then 
        echo "NeighborhoodWatch is already running. use \"nwatch --stop\" first." 
        exit
fi

sed -i "/threshold/c\threshold $threshold" /etc/motion/motion.conf
sed -i "/pre_capture/c\pre_capture $pre_capture" /etc/motion/motion.conf
sed -i "/post_capture/c\post_capture $post_capture" /etc/motion/motion.conf

sudo ip link set wlan1 up
sudo ifconfig $networkInterface down
sudo ifconfig $networkInterface up
sudo airmon-ng start $networkInterface || (echo "[ERROR]: Failed to start the network interface. check if it is set up correctly"; exit)
        modprobe v4l2loopback
        sudo airmon-ng start $networkInterface
        touch /tmp/nwatch.process
        touch /tmp/nwatch

        sh /var/nwatch/camera/alpr.sh &
        echo $! >> /tmp/nwatch
        PID1=$!
        sh /var/nwatch/camera/startCam.sh &
        sudo chmod 777 /dev/video0
        echo $! >> /tmp/nwatch
        PID2=$!
        . /var/nwatch/wifi/dbSort.sh &
        echo $! >> /tmp/nwatch
        PID3=$!
        sh /var/nwatch/wifi/insert.sh &
        echo $! >> tmp/nwatch
        PID4=$!
        motion &
        echo $! >> /tmp/nwatch
        PID5=$!


        echo $! >> /tmp/nwatch
        watchDog $PID1 "sh /var/nwatch/camera/alpr.sh" &
        echo $! >> /tmp/nwatch
        watchDog $PID2 "sh /var/nwatch/camera/startCam.sh" & 
        echo $! >> /tmp/nwatch
        watchDog $PID3 ". /var/nwatch/wifi/dbSort.sh" &
        echo $! >> /tmp/nwatch
        watchDog $PID4 "sh /var/nwatch/wifi/insert.sh" &
        echo $! >> /tmp/nwatch
        watchDog $PID5 "motion" &
        echo $! >> /tmp/nwatch
}

if [[ $* == *"--start"* ]]
then
        echo "Starting Neighbourhood watch."
        startNwatch
elif [[ $* == *"--status"* ]]
then
        if [ ! -f /tmp/nwatch ]
        then
                echo "Neighbourhood watch is not running"
        else
                echo "Neighbourhood watch is running under the following PIDs:"
                cat /tmp/nwatch | tr "\n" " "
                printf "\nThe log file is at $logDir\n"
        fi
elif [[ $* == *"--stop"* ]] 
then
        echo "Stopping Neighbourhood watch."
        killNwatch
elif [[ $* == *"--restart"* ]] 
then
        echo "Restarting Neighbourhood watch."
        killNwatch
        sleep 2
        startNwatch
else
        echo "Usage:"
        echo "\"nwatch --start\" to start the service"
        echo "\"nwatch --restart\" to restart the service"
        echo "\"nwatch --stop\" to stop the service"
        echo "\"nwatch --status\" to check whether it is running"
        
fi
